name: Lint, Test, Bundle and Deploy

on:
  push:
  release:
    types:
      - published

jobs:
  lint-test-bundle:
    name: Lint, test and bundle
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout Source
        uses: actions/checkout@v2
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install Dependencies
        run: make install
      - name: Run Linter
        run: make lint
      - name: Run Unit Tests
        run: make test
      - name: Bundle Package
        run: make bundle
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: unittests
          name: Coverage for swarmlib@${{ github.sha }}
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: swarmlib@${{ github.sha }}
          path: dist
          if-no-files-found: error

  verify-bundle:
    name: Verify bundle on ${{ matrix.os }} with python ${{ matrix.python }}
    needs:
      - lint-test-bundle
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      fail-fast: true
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          # - windows-latest
        python:
          - 3.6
          - 3.7
          - 3.8
          - 3.9
    steps:
      - name: Checkout Source
        uses: actions/checkout@v2
      - name: Setup python ${{ matrix.python }} on ${{ matrix.os }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        id: download
        with:
          name: swarmlib@${{ github.sha }}
          path: dist
      - name: Install and verify local swarmlib wheel
        run: |
          echo ${{steps.download.outputs.download-path}}
          echo $PWD
          make install-bundle

  publish:
    name: Publish Github Action
    needs:
      - lint-test-bundle
      - verify-bundle
    # if: github.event_name == 'release'
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        id: download
        with:
          name: swarmlib@${{ github.sha }}
          path: dist
      - name: Echo download path
        run: |
          echo ${{steps.download.outputs.download-path}}
          ls -R ${{steps.download.outputs.download-path}}
      # - name: Publish package
      #   uses: pypa/gh-action-pypi-publish@v1.4.1
      #   with:
      #     password: ${{ secrets.PYPI_TOKEN }}
      #     packages_dir: ${{steps.download.outputs.download-path}}
